version: '3.4'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.0
    restart: always
    container_name: demo-zookeeper
    expose:
      - 2181
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"

  kafka:
    image: confluentinc/cp-kafka:4.1.0
    container_name: demo-kafka
    ports:
      - 29092:29092
      - 29093:29093
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: demo-zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL://:29092,INTERNAL://:29093
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:29092,INTERNAL://demo-kafka:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: demo-elasticsearch
    environment:
      - cluster.name=demo-es
      - action.auto_create_index=false
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512M -Xmx512M"
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200

  mysql:
    image: percona:5.7.21
    container_name: demo-mysql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    expose:
      - 3306

  redis:
    image: redis:5.0.7
    container_name: demo-redis
    expose:
      - 6379

  whalewatcher:
    image: whalewatcher:latest
    container_name: demo-whalewatcher
    expose:
      - 4444
    command: ["/bin/whalewatcher", "--config-var", "MONITOR_CONFIG"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      MONITOR_CONFIG: |
        containers:
          demo-elasticsearch:
            pattern: TODO
          demo-redis:
            pattern: TODO
          demo-mysql:
            pattern: 'mysqld: ready for connections'
          demo-kafka:
            pattern: TODO
          demo-zookeeper:
            pattern: TODO
 
  awaiting_warmup:
    image: alpine:latest
    depends_on:
      - whalewatcher
    command: ['/bin/sh', '-c', 'apk update && apk add curl jq && watch -n 3 "curl -sS http://demo-whalewatcher:4444/" | jq .']

